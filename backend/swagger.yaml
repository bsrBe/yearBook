openapi: 3.0.0
info:
  title: Auth API
  description: API for authentication and user management
  version: 1.0.0
servers:
  - url: http://localhost:5000
paths:
  /api/auth/register:
    post:
      summary: Register a new user
      description: Create a new user account.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: John Doe
                email:
                  type: string
                  example: johndoe@example.com
                password:
                  type: string
                  example: securepassword
      responses:
        201:
          description: User created successfully.
        400:
          description: Bad request.
  /api/auth/login:
    post:
      summary: Login a user
      description: Authenticate a user and return a JWT token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: johndoe@example.com
                password:
                  type: string
                  example: securepassword
      responses:
        200:
          description: Successful login.
        401:
          description: Unauthorized.
  /api/auth/me:
    get:
      summary: Get the logged-in user's data
      description: Fetch the details of the currently authenticated user.
      security:
        - cookieAuth: []
      responses:
        200:
          description: User data retrieved successfully.
        401:
          description: Unauthorized.
  /api/auth/forgotPassword:
    post:
      summary: Forgot Password
      description: Request a password reset link.
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: johndoe@example.com
      responses:
        200:
          description: Password reset email sent.
        404:
          description: User not found.
  /api/auth/resetPassword/{token}:
    put:
      summary: Reset Password
      description: Reset a user's password using a reset token.
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: string
          description: Reset token provided in the password reset email.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: newpassword
      responses:
        200:
          description: Password reset successfully.
        400:
          description: Invalid token or bad request.
securitySchemes:

  cookieAuth:
    type: apiKey
    in: cookie
    name: cookieToken
